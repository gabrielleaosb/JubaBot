import discord
import random
from discord.ext import commands
from datetime import datetime, timedelta
import pytz
from database.db import get_db

class Work(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.timezone = pytz.timezone("America/Sao_Paulo")

    @commands.command(name="work")
    async def work(self, ctx):
        db = get_db()
        user_id = str(ctx.author.id)
        now = datetime.now(self.timezone)

        user_data = await db.users.find_one({"_id": user_id})

        if not user_data:
            await ctx.send(f"{ctx.author.mention}, voc√™ ainda n√£o est√° registrado. Use `!register`.")
            return

        last_work_time = user_data.get("last_work_time")
        if last_work_time:
            if isinstance(last_work_time, str):
                last_work_time = datetime.fromisoformat(last_work_time)

            cooldown = timedelta(hours=1)
            if now - last_work_time < cooldown:
                remaining_time = cooldown - (now - last_work_time)
                hours, remainder = divmod(int(remaining_time.total_seconds()), 3600)
                minutes = remainder // 60
                await ctx.send(f"‚è≥ {ctx.author.mention}, voc√™ j√° trabalhou recentemente. Tente novamente em **{hours}h {minutes}min**.")
                return

        # Jobs por raridade
        common_jobs = [
            ("Patrulhamento Noturno", "Voc√™ patrulhou as ruas e impediu pequenos crimes.", random.randint(10, 25)),
            ("Laborat√≥rio Tecnol√≥gico", "Voc√™ testou um novo traje.", random.randint(15, 30)),
            ("Infiltra√ß√£o Disfar√ßada", "Voc√™ se infiltrou em um esconderijo de vil√µes.", random.randint(12, 28)),
            ("Espionagem B√°sica", "Voc√™ espionou uma gangue local.", random.randint(10, 25)),
            ("Prote√ß√£o em Evento", "Voc√™ protegeu um evento importante!", random.randint(10, 20)),
        ]

        uncommon_jobs = [
            ("Miss√£o Intergal√°ctica", "Voc√™ desativou uma bomba alien√≠gena!", random.randint(30, 50)),
            ("Roubo √† Alta Tecnologia", "Voc√™ roubou equipamento avan√ßado!", random.randint(35, 55)),
            ("Ca√ßada de Vil√£o", "Voc√™ capturou um vil√£o procurado!", random.randint(40, 60)),
            ("Miss√£o Mercen√°ria", "Voc√™ cumpriu um contrato sombrio...", random.randint(30, 45)),
        ]

        rare_jobs = [
            ("Duelo Lend√°rio", "Voc√™ derrotou um vil√£o √©pico!", random.randint(70, 100)),
            ("Ataque ao Quartel", "Voc√™ invadiu uma base de her√≥is!", random.randint(65, 90)),
            ("Salvou o Multiverso", "Voc√™ impediu o colapso do multiverso!", random.randint(80, 100)),
        ]

        epic_jobs = [
            ("Guerra Temporal", "Voc√™ lutou no passado e no futuro ao mesmo tempo!", random.randint(100, 150)),
            ("Alian√ßa Sombria", "Voc√™ liderou uma equipe de vil√µes em uma miss√£o de risco!", random.randint(90, 140)),
            ("Resgate Dimensional", "Voc√™ resgatou ref√©ns de uma dimens√£o paralela!", random.randint(100, 130)),
        ]

        legendary_jobs = [
            ("Combate C√≥smico Final", "Voc√™ enfrentou uma entidade c√≥smica para salvar a exist√™ncia!", random.randint(160, 210)),
            ("Ascens√£o do Her√≥i Supremo", "Voc√™ foi reconhecido como o maior her√≥i do s√©culo!", random.randint(160, 220)),
            ("Dom√≠nio do Multiverso", "Voc√™ tomou controle de realidades paralelas inteiras!", random.randint(170, 230)),
        ]

        job_pool = [
            (common_jobs, 65, "Comum", "üü¢", discord.Color.green()),
            (uncommon_jobs, 20, "Incomum", "üîµ", discord.Color.blue()),
            (rare_jobs, 8, "Raro", "üü£", discord.Color.purple()),
            (epic_jobs, 5, "√âpico", "üü†", discord.Color.orange()),
            (legendary_jobs, 2, "Lend√°rio", "üî¥", discord.Color.red()),
        ]

        # Escolhe job e raridade
        job_list, _, rarity_name, rarity_emoji, embed_color = random.choices(
            job_pool,
            weights=[j[1] for j in job_pool],
            k=1
        )[0]
        job = random.choice(job_list)
        title, description, reward = job

        # Atualiza banco com nova hora de trabalho e recompensa
        await db.users.update_one(
            {"_id": user_id},
            {
                "$inc": {"coins": reward},
                "$set": {"last_work_time": now.isoformat()}
            }
        )

        # Envia embed com resultado
        embed = discord.Embed(
            title=f"{rarity_emoji} {title}",
            description=description,
            color=embed_color
        )
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar.url if ctx.author.avatar else None)
        embed.add_field(name="üèÜ Recompensa", value=f"üí∞ {reward} moedas", inline=True)
        embed.add_field(name="‚≠ê Raridade", value=f"{rarity_emoji} {rarity_name}", inline=True)

        await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Work(bot))
